# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BVvDwJ_wVVgVT7XomH54j4Dv8Yz6-WFy
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder

from google.colab import drive

# 구글 드라이브 마운트
drive.mount('/content/drive')

# 데이터 로드
def load_data(train_path, test_path):
    train_df = pd.read_csv(train_path)
    test_df = pd.read_csv(test_path)
    return train_df, test_df

# 결측치 처리 함수
def handle_missing_values(df):
    for col in df.columns:
        if df[col].dtype == 'object':
            df[col].fillna(df[col].mode()[0], inplace=True)  # 범주형: 최빈값으로 대체
        else:
            df[col].fillna(df[col].median(), inplace=True)  # 수치형: 중앙값으로 대체
    return df

# 범주형 변수 인코딩
def encode_categorical_features(df):
    label_encoders = {}
    for col in df.select_dtypes(include=['object']).columns:
        le = LabelEncoder()
        df[col] = le.fit_transform(df[col])
        label_encoders[col] = le
    return df, label_encoders

# 데이터 전처리 실행 함수
def preprocess_data(train_path, test_path):
    train_df, test_df = load_data(train_path, test_path)

    # ID 제거
    train_df.drop(columns=['ID'], inplace=True)
    test_df.drop(columns=['ID'], inplace=True)

    # 결측치 처리
    train_df = handle_missing_values(train_df)
    test_df = handle_missing_values(test_df)

    # 범주형 변수 인코딩
    train_df, label_encoders = encode_categorical_features(train_df)
    test_df, _ = encode_categorical_features(test_df)

    return train_df, test_df

# 데이터 전처리 실행
train_path = "/content/drive/MyDrive/open/train.csv"
test_path = "/content/drive/MyDrive/open/test.csv"
train_df, test_df = preprocess_data(train_path, test_path)

# 저장
train_df.to_csv("/content/drive/MyDrive/open/processed_train.csv", index=False)
test_df.to_csv("/content/drive/MyDrive/open/processed_test.csv", index=False)